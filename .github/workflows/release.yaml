name: Build KDebug Binaries

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Release Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          # Exclude combinations that don't make sense
          - goos: windows
            goarch: arm64

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Build Binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          # Create output directory
          mkdir -p build
          
          # Set binary name with extension for Windows
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="kdebug-mcp-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          else
            BINARY_NAME="kdebug-mcp-${{ matrix.goos }}-${{ matrix.goarch }}"
          fi
          
          # Build the binary
          go build -v -o build/$BINARY_NAME ./cmd/server/main.go
          
          # Create a checksum file
          cd build
          sha256sum $BINARY_NAME > $BINARY_NAME.sha256

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: kdebug-mcp-${{ matrix.goos }}-${{ matrix.goarch }}
          path: build/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Display structure of downloaded files
        run: ls -R ./artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}